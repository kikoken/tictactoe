(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
$(document).ready(() => {
    console.info('Loaded boardgame');

    /////////
    var activePlayer = 1,
        icons = ['.icon--x', '.icon--y'],
        gameboard = [];

    //cast
    var boxes = $('.game-board li');

    ////////////
    $('.jugador--id h5 span').text(activePlayer);

    boxes.click(e => {
        console.log('Player:', activePlayer);
        let el = e.currentTarget;
        let isGamingOption = gameboard.length < 9 && gameboard[$(el).index()] == undefined;

        if (!isGamingOption) {
            _endOfGame();
            return;
        }

        $(el).addClass('inactive').find(icons[activePlayer - 1]).addClass('active');

        _checkWinner();

        activePlayer == 1 ? activePlayer++ : activePlayer--;
        $('.jugador--id h5 span').text(activePlayer);
    });

    function _checkWinner() {
        console.info('check win...');
        let win = 0;
        if (gameboard.length > 3) {
            //horizontal validation
            $.each(boxes, el => {
                if ($(el).find('svg.active').hascss('display') != 'none') {}
            });
        }
    }

    function _endOfGame() {
        console.info('End of Game');
    }
});

},{}]},{},[1]);
